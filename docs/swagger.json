{
    "swagger": "2.0",
    "info": {
        "version": "_version_",
        "title": "Apollo Agent"
    },
    "paths": {
        "/api/v1/agent/execute/{connection_type}/{operation_name}": {
            "post": {
                "summary": "Executes an agent operation for a given integration.",
                "description": "Executes the operation named \"operation_name\" in a connection of type \"connection_type\", for example `bigquery`.<br/>The body is expected to be a JSON document including a `credentials` attribute with the credentials to use for<br/>the connection and an `operation` attribute with the definition of the operation, as described in the README file.",
                "responses": {},
                "parameters": [
                    {
                        "in": "path",
                        "name": "connection_type",
                        "description": "the connection type to use, for example `bigquery`.",
                        "example": "bigquery"
                    },
                    {
                        "in": "path",
                        "name": "operation_name",
                        "description": "the name of the operation to execute, this is used only for logging purposes as the definition of what is executed is included in the \"operation\" attribute in the body.",
                        "example": "execute_query"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ExecuteOperationRequest"
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/test/health": {
            "get": {
                "summary": "Returns health information about the agent.",
                "description": "Endpoint that returns health information about the agent, can be used as a \"ping\" endpoint.<br/>Receives an optional parameter: \"full\" that if \"true\" includes extra information like outbound IP address.",
                "responses": {
                    "200": {
                        "description": "Returns health information for this agent.",
                        "schema": {
                            "$ref": "#/definitions/HealthInformationResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id",
                        "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                    },
                    {
                        "in": "query",
                        "name": "full",
                        "type": "boolean",
                        "description": "Include extra information like \"outbound_ip_address\"."
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            },
            "post": {
                "summary": "Returns health information about the agent.",
                "description": "Endpoint that returns health information about the agent, can be used as a \"ping\" endpoint.<br/>Receives an optional parameter: \"full\" that if \"true\" includes extra information like outbound IP address.",
                "responses": {
                    "200": {
                        "description": "Returns health information for this agent.",
                        "schema": {
                            "$ref": "#/definitions/HealthInformationResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "properties": {
                            "trace_id": {
                                "type": "string",
                                "description": "An optional trace_id",
                                "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                            },
                            "full": {
                                "type": "boolean",
                                "default": false,
                                "description": "Include extra information like \"outbound_ip_address\"."
                            }
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/test/network/open": {
            "get": {
                "summary": "Tests network connectivity to the given host in the specified port.",
                "description": "Supported parameters (both in a JSON body or as query params):<br/>- host<br/>- port<br/>- timeout (in seconds)",
                "responses": {
                    "200": {
                        "description": "Returns a message indicating if the connection was successful or not.",
                        "schema": {
                            "$ref": "#/definitions/TestNetworkOpenResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "host",
                        "type": "string",
                        "description": "The host name to test",
                        "required": true,
                        "example": "getmontecarlo.com"
                    },
                    {
                        "in": "query",
                        "name": "port",
                        "type": "integer",
                        "description": "The port number to test",
                        "required": true,
                        "example": 80
                    },
                    {
                        "in": "query",
                        "name": "timeout",
                        "type": "integer",
                        "default": 5,
                        "description": "Optional timeout in seconds"
                    },
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id",
                        "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            },
            "post": {
                "summary": "Tests network connectivity to the given host in the specified port.",
                "description": "Supported parameters (both in a JSON body or as query params):<br/>- host<br/>- port<br/>- timeout (in seconds)",
                "responses": {
                    "200": {
                        "description": "Returns a message indicating if the connection was successful or not.",
                        "schema": {
                            "$ref": "#/definitions/TestNetworkOpenResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The host name to test",
                                "required": true,
                                "example": "getmontecarlo.com"
                            },
                            "port": {
                                "type": "integer",
                                "description": "The port number to test",
                                "required": true,
                                "example": 80
                            },
                            "timeout": {
                                "type": "integer",
                                "default": 5,
                                "description": "Optional timeout in seconds"
                            },
                            "trace_id": {
                                "type": "string",
                                "description": "An optional trace_id",
                                "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                            }
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/test/network/telnet": {
            "get": {
                "summary": "Tests network connectivity to the given host in the specified port using a Telnet connection.",
                "description": "Supported parameters (both in a JSON body or as query params):<br/>- host<br/>- port<br/>- timeout (in seconds)",
                "responses": {
                    "200": {
                        "description": "Returns a message indicating if the connection was successful or not.",
                        "schema": {
                            "$ref": "#/definitions/TestNetworkTelnetResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "host",
                        "type": "string",
                        "description": "The host name to test",
                        "required": true,
                        "example": "getmontecarlo.com"
                    },
                    {
                        "in": "query",
                        "name": "port",
                        "type": "integer",
                        "description": "The port number to test",
                        "required": true,
                        "example": 80
                    },
                    {
                        "in": "query",
                        "name": "timeout",
                        "type": "integer",
                        "default": 5,
                        "description": "Optional timeout in seconds"
                    },
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id"
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            },
            "post": {
                "summary": "Tests network connectivity to the given host in the specified port using a Telnet connection.",
                "description": "Supported parameters (both in a JSON body or as query params):<br/>- host<br/>- port<br/>- timeout (in seconds)",
                "responses": {
                    "200": {
                        "description": "Returns a message indicating if the connection was successful or not.",
                        "schema": {
                            "$ref": "#/definitions/TestNetworkTelnetResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "properties": {
                            "host": {
                                "type": "string",
                                "description": "The host name to test",
                                "required": true,
                                "example": "getmontecarlo.com"
                            },
                            "port": {
                                "type": "integer",
                                "description": "The port number to test",
                                "required": true,
                                "example": 80
                            },
                            "timeout": {
                                "type": "integer",
                                "default": 5,
                                "description": "Optional timeout in seconds"
                            },
                            "trace_id": {
                                "type": "string",
                                "description": "An optional trace_id"
                            }
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/upgrade": {
            "post": {
                "summary": "Requests the agent to upgrade to a given image.",
                "description": "Supported parameters (all optional):<br/>- trace_id<br/>- image (montecarlodata/repo_name:tag, for example: montecarlodata/agent:1.0.1-cloudrun).<br/>- timeout (in seconds)<br/>- **kwargs optional extra args supported by the updater implementation",
                "responses": {
                    "200": {
                        "description": "Returns a dictionary from the updater with the result of the upgrade request.",
                        "schema": {
                            "properties": {
                                "__mcd_result__": {
                                    "type": "object",
                                    "description": "Properties returned by the platform-specific updater."
                                },
                                "__mcd_trace_id__": {
                                    "type": "string",
                                    "description": "The trace_id passed as an input parameter."
                                }
                            },
                            "example": {
                                "__mcd_result__": {
                                    "revision": "GCP revision id",
                                    "service-name": "GCP service name"
                                },
                                "__mcd_trace_id__": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UpgradeRequest"
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/upgrade/logs": {
            "get": {
                "summary": "Requests the agent to return a list of upgrade log events after the given datetime.",
                "description": "Supported parameters (all optional):<br/>- trace_id<br/>- start_time (defaults to now - 10 minutes)<br/>- limit (defaults to 100)",
                "responses": {
                    "200": {
                        "description": "Returns a list of upgrade log events after the given datetime.",
                        "schema": {
                            "$ref": "#/definitions/GetUpgradeLogsResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id"
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "type": "string",
                        "description": "The start time for the log events, a datetime in ISO format. Defaults to 10 minutes ago.",
                        "example": "2023-12-25T12:31:45+00:00"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "integer",
                        "description": "Maximum number of events to return.",
                        "default": 100
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            },
            "post": {
                "summary": "Requests the agent to return a list of upgrade log events after the given datetime.",
                "description": "Supported parameters (all optional):<br/>- trace_id<br/>- start_time (defaults to now - 10 minutes)<br/>- limit (defaults to 100)",
                "responses": {
                    "200": {
                        "description": "Returns a list of upgrade log events after the given datetime.",
                        "schema": {
                            "$ref": "#/definitions/GetUpgradeLogsResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "properties": {
                            "trace_id": {
                                "type": "string",
                                "description": "An optional trace_id"
                            },
                            "start_time": {
                                "type": "string",
                                "description": "The start time for the log events, a datetime in ISO format. Defaults to 10 minutes ago.",
                                "example": "2023-12-25T12:31:45+00:00"
                            },
                            "limit": {
                                "type": "integer",
                                "description": "Maximum number of events to return.",
                                "default": 100
                            }
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/infra/details": {
            "get": {
                "summary": "Get Infrastructure Details",
                "description": "Requests the infrastructure details to the agent that will forward the request to the \"infra_provider\"<br/>previously set.<br/>Returns a dictionary with the infrastructure details returned by the infra_provider implementation<br/>set in the agent.",
                "responses": {
                    "200": {
                        "description": "Returns infrastructure information for this agent, the attributes returned depend on the platform.",
                        "schema": {
                            "$ref": "#/definitions/InfraDetailsResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id"
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            },
            "post": {
                "summary": "Get Infrastructure Details",
                "description": "Requests the infrastructure details to the agent that will forward the request to the \"infra_provider\"<br/>previously set.<br/>Returns a dictionary with the infrastructure details returned by the infra_provider implementation<br/>set in the agent.",
                "responses": {
                    "200": {
                        "description": "Returns infrastructure information for this agent, the attributes returned depend on the platform.",
                        "schema": {
                            "$ref": "#/definitions/InfraDetailsResponse"
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "properties": {
                            "trace_id": {
                                "type": "string",
                                "description": "An optional trace_id"
                            }
                        }
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        },
        "/api/v1/test/network/outbound_ip_address": {
            "get": {
                "summary": "Get outbound IP Address.",
                "description": "Returns the public IP address used by the agent for outbound connections.",
                "responses": {
                    "200": {
                        "description": "Returns the outbound IP address for this agent.",
                        "schema": {
                            "properties": {
                                "__mcd_result__": {
                                    "type": "object",
                                    "properties": {
                                        "outbound_ip_address": {
                                            "type": "string"
                                        }
                                    },
                                    "example": {
                                        "outbound_ip_address": "12.34.5.255"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "query",
                        "name": "trace_id",
                        "type": "string",
                        "description": "An optional trace_id"
                    }
                ],
                "produces": "application/json",
                "security": [
                    {
                        "Agent Authentication": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "ExecuteOperationRequest": {
            "properties": {
                "credentials": {
                    "type": "object",
                    "description": "authentication information for establishing the connection.",
                    "example": {
                        "user": "user_name",
                        "password": "password"
                    }
                },
                "operation": {
                    "type": "object",
                    "description": "The operation to execute, defined by a list of commands.",
                    "properties": {
                        "trace_id": {
                            "type": "string",
                            "description": "An optional trace id",
                            "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                        },
                        "commands": {
                            "type": "array",
                            "description": "The list of commands to execute.",
                            "items": {
                                "properties": {
                                    "target": {
                                        "type": "string",
                                        "default": "_client",
                                        "example": "_cursor",
                                        "description": "Name of the context variable to use as the target for the `method` to invoke."
                                    },
                                    "method": {
                                        "type": "string",
                                        "required": true,
                                        "description": "The method to invoke in `target`.",
                                        "example": "execute"
                                    },
                                    "store": {
                                        "type": "string",
                                        "example": "_cursor",
                                        "description": "Optional name of a variable to store the result of the invocation."
                                    },
                                    "args": {
                                        "type": "array",
                                        "description": "Positional arguments for the method to invoke.",
                                        "items": {
                                            "type": "object"
                                        }
                                    },
                                    "kwargs": {
                                        "type": "object",
                                        "description": "Keyword arguments for the method to invoke."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "HealthInformationResponse": {
            "properties": {
                "__mcd_result__": {
                    "type": "object",
                    "properties": {
                        "build": {
                            "type": "string",
                            "description": "Current build number, for example '345'"
                        },
                        "version": {
                            "type": "string",
                            "description": "Current version, for example '1.0.1'"
                        },
                        "trace_id": {
                            "type": "string",
                            "description": "The same trace_id passed as an input parameter."
                        },
                        "platform": {
                            "type": "string",
                            "description": "Platform name, for example AWS, GCP or Azure."
                        },
                        "env": {
                            "type": "object",
                            "description": "Environment variables, depends on the platform."
                        },
                        "platform_info": {
                            "type": "object",
                            "description": "Platform information, depends on the platform."
                        }
                    },
                    "example": {
                        "build": "698",
                        "version": "1.0.1",
                        "platform": "AWS",
                        "env": {
                            "AWS_REGION": "us-east-1",
                            "MCD_STACK_ID": "cf_stack_arn"
                        },
                        "platform_info": {
                            "image": "account.dkr.ecr.*.amazonaws.com/repo:1.0.1"
                        },
                        "trace_id": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                    }
                }
            }
        },
        "TestNetworkOpenResponse": {
            "properties": {
                "__mcd_result__": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "A message indicating if the connection was successful or not."
                        }
                    }
                },
                "__mcd_trace_id__": {
                    "type": "string",
                    "description": "The trace_id passed as an input parameter."
                }
            },
            "example": {
                "__mcd_result__": {
                    "message": "Port 80 is open on getmontecarlo.com"
                },
                "__mcd_trace_id__": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
            }
        },
        "TestNetworkTelnetResponse": {
            "properties": {
                "__mcd_result__": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "A message indicating if the connection was successful or not."
                        }
                    }
                },
                "__mcd_trace_id__": {
                    "type": "string",
                    "description": "The trace_id passed as an input parameter."
                }
            },
            "example": {
                "__mcd_result__": {
                    "message": "Telnet connection for getmontecarlo.com:80 is usable."
                },
                "__mcd_trace_id__": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
            }
        },
        "UpgradeRequest": {
            "properties": {
                "trace_id": {
                    "type": "string",
                    "description": "Optional trace id",
                    "example": "324986b4-b185-4187-b4af-b0c2cd60f7a0"
                },
                "image": {
                    "type": "string",
                    "description": "Image URI, for example montecarlodata/agent:1.0.1-cloudrun",
                    "required": true,
                    "example": "montecarlodata/agent:1.0.1-cloudrun"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Optional timeout in seconds, used only by GCP updater.",
                    "example": 30
                },
                "parameters": {
                    "type": "object",
                    "description": "Optional parameters to update, like ConcurrentExecutions or MemorySize, supported only by AWS platform.",
                    "example": {
                        "ConcurrentExecutions": 20,
                        "MemorySize": 1024
                    }
                },
                "wait_for_completion": {
                    "type": "boolean",
                    "default": false,
                    "description": "Optional flag indicating if the endpoint should wait for the update to complete, supported only by AWS platform."
                }
            }
        },
        "GetUpgradeLogsResponse": {
            "properties": {
                "__mcd_result__": {
                    "type": "object",
                    "properties": {
                        "events": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "timestamp": {
                                        "type": "string"
                                    },
                                    "logicalResourceId": {
                                        "type": "string"
                                    },
                                    "resourceType": {
                                        "type": "string"
                                    },
                                    "resourceStatus": {
                                        "type": "string"
                                    },
                                    "resourceStatusReason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "example": {
                        "events": [
                            {
                                "timestamp": "2023-12-28T14:13:48.445000+00:00",
                                "logicalResourceId": "Storage",
                                "resourceType": "AWS::S3::Bucket",
                                "resourceStatus": "UPDATE_COMPLETE",
                                "resourceStatusReason": null
                            },
                            {
                                "timestamp": "2023-12-28T14:13:47.445000+00:00",
                                "logicalResourceId": "Function",
                                "resourceType": "AWS::Lambda::Function",
                                "resourceStatus": "UPDATE_COMPLETE",
                                "resourceStatusReason": null
                            }
                        ]
                    }
                }
            }
        },
        "InfraDetailsResponse": {
            "properties": {
                "__mcd_result__": {
                    "type": "object",
                    "example": {
                        "template": "CF Template in YAML Format",
                        "parameters": [
                            {
                                "ParameterKey": "MemorySize",
                                "ParameterValue": "512"
                            },
                            {
                                "ParameterKey": "ConcurrentExecutions",
                                "ParameterValue": "20"
                            }
                        ]
                    }
                }
            }
        }
    },
    "host": "localhost:8081"
}